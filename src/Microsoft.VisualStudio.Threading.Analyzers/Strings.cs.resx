<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AwaitXInstead" xml:space="preserve">
    <value>Použijte raději await {0}.</value>
    <comment>"await" is a C# keyword and should not be translated.
{0} is a method name.</comment>
  </data>
  <data name="UseAwaitInstead" xml:space="preserve">
    <value>Použijte raději await.</value>
    <comment>"await" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD002_MessageFormat" xml:space="preserve">
    <value>Synchronní čekání na položky typu task nebo awaiter může způsobit vzájemné zablokování. Místo toho použijte await nebo JoinableTaskFactory.Run.</value>
    <comment>"await" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD002_Title" xml:space="preserve">
    <value>Vyhněte se problematickým synchronním čekáním</value>
  </data>
  <data name="VSTHRD010_Title" xml:space="preserve">
    <value>Vyvolání typů s jedním vláknem z hlavního vlákna</value>
  </data>
  <data name="VSTHRD100_MessageFormat" xml:space="preserve">
    <value>Nepoužívejte metody async void, protože veškeré výjimky neošetřené metodou způsobí selhání procesu.</value>
    <comment>"async void" is a pair of C# keywords. Do not translate them.</comment>
  </data>
  <data name="VSTHRD100_Title" xml:space="preserve">
    <value>Vyhněte se použití metod async void</value>
    <comment>"async void" is a pair of C# keywords. Do not translate them.</comment>
  </data>
  <data name="VSTHRD101_MessageFormat" xml:space="preserve">
    <value>U typu delegáta, který vrací hodnotu void, se vyhněte použití asynchronního výrazu lambda, protože veškeré výjimky neošetřené delegátem způsobí selhání procesu.</value>
    <comment>"void" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD101_Title" xml:space="preserve">
    <value>Vyhněte se použití nepodporovaných asynchronních delegátů</value>
  </data>
  <data name="VSTHRD106_MessageFormat" xml:space="preserve">
    <value>Delegáti AsyncEventHandler se musí volat prostřednictvím metody rozšíření TplExtensions.InvokeAsync() definované v sestavení Microsoft.VisualStudio.Threading.</value>
  </data>
  <data name="VSTHRD106_Title" xml:space="preserve">
    <value>Použití InvokeAsync k vyvolání asynchronních událostí</value>
  </data>
  <data name="VSTHRD003_MessageFormat" xml:space="preserve">
    <value>Volání operátoru await u položky typu Task uvnitř JoinableTaskFactory.Run v případě, že je úloha inicializovaná mimo delegáta, může způsobit potenciální vzájemná blokování.
Tomuto problému můžete předejít tak, že zajistíte inicializaci úlohy v rámci delegáta nebo místo položky typu Task použijete JoinableTask.</value>
  </data>
  <data name="VSTHRD003_Title" xml:space="preserve">
    <value>Vyhněte se použití operátoru await u nespojitelných úloh v kontextech spojení</value>
  </data>
  <data name="VSTHRD011_MessageFormat" xml:space="preserve">
    <value>Lazy&lt;Task&lt;T&gt;&gt;.Value může způsobit vzájemné blokování.
Použijte raději AsyncLazy&lt;T&gt;.</value>
  </data>
  <data name="VSTHRD011_Title" xml:space="preserve">
    <value>Použijte AsyncLazy&lt;T&gt;</value>
  </data>
  <data name="VSTHRD103_MessageFormat" xml:space="preserve">
    <value>{0} provádí synchronní blokování. Místo toho použijte await {1}.</value>
  </data>
  <data name="VSTHRD103_MessageFormat_UseAwaitInstead" xml:space="preserve">
    <value>{0} provádí synchronní blokování. Místo toho použijte await.</value>
  </data>
  <data name="VSTHRD103_Title" xml:space="preserve">
    <value>Volání asynchronních metod v asynchronní metodě</value>
  </data>
  <data name="VSTHRD102_MessageFormat" xml:space="preserve">
    <value>Omezte použití volání metod, které provádí synchronní blokování, například JoinableTaskFactory.Run nebo Task.Result, na veřejné členy vstupního bodu, kde musíte být synchronní. Použití těchto metod pro interní členy zbytečně přidává synchronní rámce mezi asynchronní rámce, což vede k vyčerpání fondu vláken.</value>
  </data>
  <data name="VSTHRD102_Title" xml:space="preserve">
    <value>Asynchronní implementace interní logiky</value>
  </data>
  <data name="VSTHRD200_CodeFix_Title" xml:space="preserve">
    <value>Přejmenování na {0}</value>
    <comment>{0} is a method name.</comment>
  </data>
  <data name="VSTHRD200_Title" xml:space="preserve">
    <value>Použití přípony Async pro asynchronní metody</value>
  </data>
  <data name="VSTHRD100_CodeFix_Title" xml:space="preserve">
    <value>Změňte návratový typ na Task.</value>
    <comment>Task is a type name and should not be translated.</comment>
  </data>
  <data name="VSTHRD105_MessageFormat" xml:space="preserve">
    <value>Nepoužívejte přetížení metod, která předpokládají TaskScheduler.Current. Použijte přetížení, které akceptuje TaskScheduler a explicitně zadejte TaskScheduler.Default (případně jakoukoli jinou vlastnost).</value>
  </data>
  <data name="VSTHRD105_Title" xml:space="preserve">
    <value>Vyhněte se přetížením metod, která předpokládají TaskScheduler.Current</value>
  </data>
  <data name="VSTHRD012_MessageFormat" xml:space="preserve">
    <value>Zadejte instanci JoinableTaskFactory v tomto volání (nebo v jiném přetížení), aby se předešlo zablokováním s hlavním vláknem.</value>
  </data>
  <data name="VSTHRD012_Title" xml:space="preserve">
    <value>Zadejte JoinableTaskFactory, kde je to povoleno</value>
  </data>
  <data name="VSTHRD104_MessageFormat" xml:space="preserve">
    <value>Vystavte asynchronní verzi této metody, která neprovádí synchronní blokování. Potom tuto metodu zjednodušte tak, aby volala danou asynchronní metodu v rámci delegáta JoinableTaskFactory.Run.</value>
  </data>
  <data name="VSTHRD104_Title" xml:space="preserve">
    <value>Nabízejte asynchronní metody</value>
  </data>
  <data name="VSTHRD001_MessageFormat" xml:space="preserve">
    <value>Počkejte, než se na vlákno uživatelského rozhraní přepne JoinableTaskFactory.SwitchToMainThreadAsync(), a ne rozhraní API, která se můžou zablokovat nebo vyžadovat zadání priority.</value>
  </data>
  <data name="VSTHRD001_Title" xml:space="preserve">
    <value>Vyhněte se starším verzím rozhraní API pro přepínání vláken</value>
    <comment>thread switching APIs refers to Visual Studio SDK or .NET methods that can be used to switch threads, but are obsolete and should be avoided.</comment>
  </data>
  <data name="VSTHRD107_MessageFormat" xml:space="preserve">
    <value>Chybí operátor await ve výrazu using.</value>
    <comment>"await" and "using" are C# keywords and should not be translated.</comment>
  </data>
  <data name="VSTHRD107_Title" xml:space="preserve">
    <value>Úloha await ve výrazu using</value>
    <comment>"await Task" is a C# compound term, and "using" is a C# keyword. These should not be translated.</comment>
  </data>
  <data name="VSTHRD107_CodeFix_Title" xml:space="preserve">
    <value>Výraz using s operátorem await</value>
    <comment>"await" and "using" are C# keywords and should not be translated.</comment>
  </data>
  <data name="VSTHRD002_CodeFix_Await_Title" xml:space="preserve">
    <value>Použijte raději await.</value>
    <comment>"await" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD108_MessageFormat" xml:space="preserve">
    <value>Kontroly spřažení vláken by měly být bez podmínek.</value>
  </data>
  <data name="VSTHRD108_Title" xml:space="preserve">
    <value>Vyhodnotit spřažení vláken bez podmínek</value>
  </data>
  <data name="VSTHRD109_MessageFormat" xml:space="preserve">
    <value>Vyhněte se tomuto volání, pokud nejste v hlavním vláknu a jste v asynchronní metodě nebo metodě, která vrací Task. Místo toho přepněte na požadované vlákno.</value>
  </data>
  <data name="VSTHRD109_Title" xml:space="preserve">
    <value>V asynchronních metodách použijte Switch místo Assert</value>
  </data>
  <data name="VSTHRD010_MessageFormat_Sync" xml:space="preserve">
    <value>Přístup k {0} by se měl provádět jenom v hlavním vláknu. Napřed volejte {1}().</value>
    <comment>{0} is a type or member name and {1} is the name of a method that throws if not called from the main thread.</comment>
  </data>
  <data name="VSTHRD010_MessageFormat_Async" xml:space="preserve">
    <value>Přístup k {0} by se měl provádět jenom v hlavním vláknu. Napřed počkejte na dokončení volání metody JoinableTaskFactory.SwitchToMainThreadAsync().</value>
    <comment>{0} is a type or member name.</comment>
  </data>
  <data name="VSTHRD004_MessageFormat" xml:space="preserve">
    <value>U volání JoinableTaskFactory.SwitchToMainThreadAsync() se musí čekat na dokončení.</value>
  </data>
  <data name="VSTHRD004_Title" xml:space="preserve">
    <value>Použijte Await SwitchToMainThreadAsync</value>
    <comment>Do not translate either of these. The first is a keyword, the second is a method name.</comment>
  </data>
  <data name="VSTHRD110_MessageFormat" xml:space="preserve">
    <value>Přijměte očekávatelný výsledek volání této metody tak, že na něj počkáte, přiřadíte ho do proměnné nebo ho předáte další metodě.</value>
  </data>
  <data name="VSTHRD110_Title" xml:space="preserve">
    <value>Přijměte výsledek asynchronních volání</value>
  </data>
  <data name="VSTHRD011b_MessageFormat" xml:space="preserve">
    <value>Vyvolání nebo zablokování asynchronního kódu v objektu pro vytváření hodnot Lazy&lt;T&gt; může způsobit zablokování.
Použijte raději AsyncLazy&lt;T&gt;.</value>
  </data>
  <data name="VSTHRD200_AddAsync_MessageFormat" xml:space="preserve">
    <value>V názvech metod, které vrací typ awaitable, používejte příponu „Async“.</value>
  </data>
  <data name="VSTHRD200_RemoveAsync_MessageFormat" xml:space="preserve">
    <value>V názvech metod, které nevrací typ awaitable, se vyhněte používání přípony „Async“.</value>
  </data>
  <data name="VSTHRD111_CodeFix_False_Title" xml:space="preserve">
    <value>Přidat .ConfigureAwait(false)</value>
    <comment>".ConfigureAwait(false)" should not be translated.</comment>
  </data>
  <data name="VSTHRD111_CodeFix_True_Title" xml:space="preserve">
    <value>Přidat .ConfigureAwait(true)</value>
    <comment>".ConfigureAwait(true)" should not be translated.</comment>
  </data>
  <data name="VSTHRD111_MessageFormat" xml:space="preserve">
    <value>Přidejte .ConfigureAwait(bool) ke svému výrazu await.</value>
    <comment>".ConfigureAwait(bool)" and "await" should NOT be translated.</comment>
  </data>
  <data name="VSTHRD111_Title" xml:space="preserve">
    <value>Používat ConfigureAwait(bool)</value>
    <comment>"ConfigureAwait(bool)" is a reference and should NOT be translated.</comment>
  </data>
</root>