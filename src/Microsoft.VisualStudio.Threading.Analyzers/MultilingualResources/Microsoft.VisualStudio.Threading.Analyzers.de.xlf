<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" source-language="en-US" target-language="de" original="MICROSOFT.VISUALSTUDIO.THREADING.ANALYZERS/STRINGS.RESX" tool-id="MultilingualAppToolkit" product-name="n/a" product-version="n/a" build-num="n/a">
    <header>
      <tool tool-id="MultilingualAppToolkit" tool-name="Multilingual App Toolkit" tool-version="4.0.1795.0" tool-company="Microsoft" />
    </header>
    <body>
      <group id="MICROSOFT.VISUALSTUDIO.THREADING.ANALYZERS/STRINGS.RESX" datatype="resx">
        <trans-unit id="AwaitXInstead" translate="yes" xml:space="preserve">
          <source>Await {0} instead</source>
          <target state="translated">Stattdessen auf {0} warten</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.
{0} is a method name.</note>
        </trans-unit>
        <trans-unit id="UseAwaitInstead" translate="yes" xml:space="preserve">
          <source>Use await instead</source>
          <target state="translated">Stattdessen "await" verwenden</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD002_MessageFormat" translate="yes" xml:space="preserve">
          <source>Synchronously waiting on tasks or awaiters may cause deadlocks. Use await or JoinableTaskFactory.Run instead.</source>
          <target state="translated">Das synchrone Warten auf Aufgaben oder Awaiters führt unter Umständen zu Deadlocks. Verwenden Sie stattdessen "await" oder "JoinableTaskFactory.Run".</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD002_Title" translate="yes" xml:space="preserve">
          <source>Avoid problematic synchronous waits</source>
          <target state="translated">Problematische synchrone Wartevorgänge vermeiden</target>
        </trans-unit>
        <trans-unit id="VSTHRD010_Title" translate="yes" xml:space="preserve">
          <source>Invoke single-threaded types on Main thread</source>
          <target state="translated">Singlethread-Typen im Hauptthread aufrufen</target>
        </trans-unit>
        <trans-unit id="VSTHRD100_MessageFormat" translate="yes" xml:space="preserve">
          <source>Avoid "async void" methods, because any exceptions not handled by the method will crash the process.</source>
          <target state="translated">Vermeiden Sie "async void"-Methoden, da Ausnahmen, die nicht von der Methode verarbeitet werden, zu einem Absturz des Prozesses führen.</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"async void" is a pair of C# keywords. Do not translate them.</note>
        </trans-unit>
        <trans-unit id="VSTHRD100_Title" translate="yes" xml:space="preserve">
          <source>Avoid async void methods</source>
          <target state="translated">"async void"-Methoden vermeiden</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"async void" is a pair of C# keywords. Do not translate them.</note>
        </trans-unit>
        <trans-unit id="VSTHRD101_MessageFormat" translate="yes" xml:space="preserve">
          <source>Avoid using async lambda for a void returning delegate type, because any exceptions not handled by the delegate will crash the process.</source>
          <target state="translated">Vermeiden Sie die Verwendung von Async Lambda für einen "void" zurückgebenden Delegattypen, da Ausnahmen, die nicht vom Delegaten verarbeitet werden, zu einem Absturz des Prozesses führen.</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"void" is a C# keyword and should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD101_Title" translate="yes" xml:space="preserve">
          <source>Avoid unsupported async delegates</source>
          <target state="translated">Nicht unterstützte asynchrone Delegaten vermeiden</target>
        </trans-unit>
        <trans-unit id="VSTHRD106_MessageFormat" translate="yes" xml:space="preserve">
          <source>AsyncEventHandler delegates should be invoked via the extension method "TplExtensions.InvokeAsync()" defined in Microsoft.VisualStudio.Threading assembly.</source>
          <target state="translated">AsyncEventHandler-Delegaten müssen über die Erweiterungsmethode "TplExtensions.InvokeAsync()", die in der Microsoft.VisualStudio.Threading-Assembly definiert ist, aufgerufen werden.</target>
        </trans-unit>
        <trans-unit id="VSTHRD106_Title" translate="yes" xml:space="preserve">
          <source>Use InvokeAsync to raise async events</source>
          <target state="translated">InvokeAsync zum Auslösen asynchroner Ereignisse verwenden</target>
        </trans-unit>
        <trans-unit id="VSTHRD003_MessageFormat" translate="yes" xml:space="preserve">
          <source>Calling await on a Task when the task is initialized in another context can cause potential deadlocks.
You can avoid this problem by ensuring the task is initialized within the same method or by using JoinableTask instead of Task.</source>
          <target state="needs-review-translation">Das Aufrufen von "await" für einen Task innerhalb von JoinableTaskFactory.Run führt unter Umständen zu Deadlocks, wenn der Task außerhalb des Delegaten initialisiert wird.
Sie können dies vermeiden, indem Sie sicherstellen, dass der Task innerhalb des Delegaten initialisiert wird, oder JoinableTask anstelle von Task verwenden.</target>
          <note from="MultilingualUpdate" annotates="source" priority="2">Please verify the translation’s accuracy as the source string was updated after it was translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD003_Title" translate="yes" xml:space="preserve">
          <source>Avoid awaiting foreign Tasks</source>
          <target state="needs-review-translation">Warten auf Tasks, für die kein Beitritt möglich ist, in Join-Kontexten vermeiden</target>
          <note from="MultilingualUpdate" annotates="source" priority="2">Please verify the translation’s accuracy as the source string was updated after it was translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD011_MessageFormat" translate="yes" xml:space="preserve">
          <source>Lazy&lt;Task&lt;T&gt;&gt;.Value can deadlock.
Use AsyncLazy&lt;T&gt; instead.</source>
          <target state="translated">"Lazy&lt;Task&lt;T&gt;&gt;.Value" führt unter Umständen zu einem Deadlock.
Verwenden Sie stattdessen "AsyncLazy&lt;T&gt;".</target>
        </trans-unit>
        <trans-unit id="VSTHRD011_Title" translate="yes" xml:space="preserve">
          <source>Use AsyncLazy<it id="1" pos="open">&lt;T&gt;</it></source>
          <target state="translated">"AsyncLazy&lt;it id="1" pos="open"&gt;&lt;T&gt;&lt;/it&gt;" verwenden</target>
        </trans-unit>
        <trans-unit id="VSTHRD103_MessageFormat" translate="yes" xml:space="preserve">
          <source>{0} synchronously blocks. Await {1} instead.</source>
          <target state="translated">{0} synchron blockiert. Warten Sie stattdessen auf {1}.</target>
        </trans-unit>
        <trans-unit id="VSTHRD103_MessageFormat_UseAwaitInstead" translate="yes" xml:space="preserve">
          <source>{0} synchronously blocks. Use await instead.</source>
          <target state="translated">{0} synchron blockiert. Verwenden Sie stattdessen "await".</target>
        </trans-unit>
        <trans-unit id="VSTHRD103_Title" translate="yes" xml:space="preserve">
          <source>Call async methods when in an async method</source>
          <target state="translated">Asynchrone Methoden in einer asynchronen Methode aufrufen</target>
        </trans-unit>
        <trans-unit id="VSTHRD102_MessageFormat" translate="yes" xml:space="preserve">
          <source>Limit use of synchronously blocking method calls such as JoinableTaskFactory.Run or Task.Result to public entrypoint members where you must be synchronous. Using it for internal members can needlessly add synchronous frames between asynchronous frames, leading to threadpool exhaustion.</source>
          <target state="translated">Beschränken Sie die Verwendung synchron blockierender Methodenaufrufe wie "JoinableTaskFactory.Run" oder "Task.Result" auf öffentliche Einstiegspunktmitglieder, bei denen Sie synchron sein müssen. Wenn Sie sie für interne Mitglieder verwenden, werden asynchronen Frames unter Umständen unnötigerweise synchrone Frames hinzugefügt, was zu einer Auslastung des Threadpools führt.</target>
        </trans-unit>
        <trans-unit id="VSTHRD102_Title" translate="yes" xml:space="preserve">
          <source>Implement internal logic asynchronously</source>
          <target state="translated">Interne Logik asynchron implementieren</target>
        </trans-unit>
        <trans-unit id="VSTHRD200_CodeFix_Title" translate="yes" xml:space="preserve">
          <source>Rename to {0}</source>
          <target state="translated">In {0} umbenennen</target>
          <note from="MultilingualBuild" annotates="source" priority="2">{0} is a method name.</note>
        </trans-unit>
        <trans-unit id="VSTHRD200_Title" translate="yes" xml:space="preserve">
          <source>Use "Async" suffix for async methods</source>
          <target state="translated">Verwenden Sie das Suffix "Async" für asynchrone Methoden</target>
        </trans-unit>
        <trans-unit id="VSTHRD100_CodeFix_Title" translate="yes" xml:space="preserve">
          <source>Change return type to Task</source>
          <target state="translated">Rückgabetyp in Task ändern</target>
          <note from="MultilingualBuild" annotates="source" priority="2">Task is a type name and should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD105_MessageFormat" translate="yes" xml:space="preserve">
          <source>Avoid method overloads that assume TaskScheduler.Current. Use an overload that accepts a TaskScheduler and specify TaskScheduler.Default (or any other) explicitly.</source>
          <target state="translated">Vermeiden Sie Methodenüberladungen, die "TaskScheduler.Current" annehmen. Verwenden Sie eine Überladung, die einen TaskScheduler akzeptiert, und geben Sie explizit "TaskScheduler.Default" (o. a.) an.</target>
        </trans-unit>
        <trans-unit id="VSTHRD105_Title" translate="yes" xml:space="preserve">
          <source>Avoid method overloads that assume TaskScheduler.Current</source>
          <target state="translated">Methodenüberladungen, die TaskScheduler.Current annehmen, vermeiden</target>
        </trans-unit>
        <trans-unit id="VSTHRD012_MessageFormat" translate="yes" xml:space="preserve">
          <source>Provide an instance of JoinableTaskFactory in this call (or another overload) to avoid deadlocks with the main thread.</source>
          <target state="translated">Stellen Sie in diesem Aufruf (oder einer anderen Überladung) eine Instanz von "JoinableTaskFactory" bereit, um Deadlocks beim Hauptthread zu vermeiden.</target>
        </trans-unit>
        <trans-unit id="VSTHRD012_Title" translate="yes" xml:space="preserve">
          <source>Provide JoinableTaskFactory where allowed</source>
          <target state="translated">"JoinableTaskFactory" bereitstellen, wenn zulässig</target>
        </trans-unit>
        <trans-unit id="VSTHRD104_MessageFormat" translate="yes" xml:space="preserve">
          <source>Expose an async version of this method that does not synchronously block. Then simplify this method to call that async method within a JoinableTaskFactory.Run delegate.</source>
          <target state="translated">Machen Sie eine asynchrone Version dieser Methode verfügbar, die nicht synchron blockiert. Vereinfachen Sie diese Methode anschließend, um die asynchrone Methode innerhalb eines Delegaten vom Typ "JoinableTaskFactory.Run" aufzurufen.</target>
        </trans-unit>
        <trans-unit id="VSTHRD104_Title" translate="yes" xml:space="preserve">
          <source>Offer async methods</source>
          <target state="translated">Asynchrone Methoden bieten</target>
        </trans-unit>
        <trans-unit id="VSTHRD001_MessageFormat" translate="yes" xml:space="preserve">
          <source>Await JoinableTaskFactory.SwitchToMainThreadAsync() to switch to the UI thread instead of APIs that can deadlock or require specifying a priority.</source>
          <target state="translated">Warten Sie darauf, dass "JoinableTaskFactory.SwitchToMainThreadAsync()" zum UI-Thread wechselt anstelle von APIs, bei denen Deadlocks auftreten können oder für die unter Umständen eine Priorität festgelegt werden muss.</target>
        </trans-unit>
        <trans-unit id="VSTHRD001_Title" translate="yes" xml:space="preserve">
          <source>Avoid legacy thread switching APIs</source>
          <target state="translated">Legacy-APIs zum Wechseln von Threads vermeiden</target>
          <note from="MultilingualBuild" annotates="source" priority="2">thread switching APIs refers to Visual Studio SDK or .NET methods that can be used to switch threads, but are obsolete and should be avoided.</note>
        </trans-unit>
        <trans-unit id="VSTHRD107_MessageFormat" translate="yes" xml:space="preserve">
          <source>Missing await operator for "using" expression.</source>
          <target state="translated">Der await-Operator für den "using"-Ausdruck fehlt.</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"await" and "using" are C# keywords and should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD107_Title" translate="yes" xml:space="preserve">
          <source>Await Task within using expression</source>
          <target state="translated">Await Task im using-Ausdruck.</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"await Task" is a C# compound term, and "using" is a C# keyword. These should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD107_CodeFix_Title" translate="yes" xml:space="preserve">
          <source>Await using expression</source>
          <target state="translated">Await using-Ausdruck</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"await" and "using" are C# keywords and should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD002_CodeFix_Await_Title" translate="yes" xml:space="preserve">
          <source>Use await instead</source>
          <target state="translated">Stattdessen "await" verwenden</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"await" is a C# keyword and should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD108_MessageFormat" translate="yes" xml:space="preserve">
          <source>Thread affinity checks should be unconditional.</source>
          <target state="translated">Überprüfungen der Threadaffinität dürfen keine Bedingungen umfassen.</target>
        </trans-unit>
        <trans-unit id="VSTHRD108_Title" translate="yes" xml:space="preserve">
          <source>Assert thread affinity unconditionally</source>
          <target state="translated">Threadaffinität ohne Bedingungen bestätigen</target>
        </trans-unit>
        <trans-unit id="VSTHRD109_MessageFormat" translate="yes" xml:space="preserve">
          <source>Avoid throwing when not on the main thread while in an async or Task-returning method. Switch to the thread required instead.</source>
          <target state="translated">Vermeiden Sie eine Auslösung in einer asynchronen Methode oder einer Methode mit Aufgabenrückgabe, sofern Sie sich nicht im Hauptthread befinden. Wechseln Sie stattdessen zum benötigten Thread.</target>
        </trans-unit>
        <trans-unit id="VSTHRD109_Title" translate="yes" xml:space="preserve">
          <source>Switch instead of assert in async methods</source>
          <target state="translated">"switch" anstelle von "assert" in asynchronen Methoden</target>
        </trans-unit>
        <trans-unit id="VSTHRD010_MessageFormat_Sync" translate="yes" xml:space="preserve">
          <source>Accessing "{0}" should only be done on the main thread. Call {1}() first.</source>
          <target state="translated">Der Zugriff auf "{0}" sollte nur im Hauptthread erfolgen. Rufen Sie zuerst "{1}()" auf.</target>
          <note from="MultilingualBuild" annotates="source" priority="2">{0} is a type or member name and {1} is the name of a method that throws if not called from the main thread.</note>
        </trans-unit>
        <trans-unit id="VSTHRD010_MessageFormat_Async" translate="yes" xml:space="preserve">
          <source>Accessing "{0}" should only be done on the main thread. Await JoinableTaskFactory.SwitchToMainThreadAsync() first.</source>
          <target state="translated">Der Zugriff auf "{0}" sollte nur im Hauptthread erfolgen. Warten Sie zuerst auf "JoinableTaskFactory.SwitchToMainThreadAsync()".</target>
          <note from="MultilingualBuild" annotates="source" priority="2">{0} is a type or member name.</note>
        </trans-unit>
        <trans-unit id="VSTHRD004_MessageFormat" translate="yes" xml:space="preserve">
          <source>Calls to JoinableTaskFactory.SwitchToMainThreadAsync() must be awaited.</source>
          <target state="translated">Aufrufe an "JoinableTaskFactory.SwitchToMainThreadAsync()" müssen mit "await" abgewartet werden.</target>
        </trans-unit>
        <trans-unit id="VSTHRD004_Title" translate="yes" xml:space="preserve">
          <source>Await SwitchToMainThreadAsync</source>
          <target state="translated">Await SwitchToMainThreadAsync</target>
          <note from="MultilingualBuild" annotates="source" priority="2">Do not translate either of these. The first is a keyword, the second is a method name.</note>
        </trans-unit>
        <trans-unit id="VSTHRD110_MessageFormat" translate="yes" xml:space="preserve">
          <source>Observe the awaitable result of this method call by awaiting it, assigning to a variable, or passing it to another method.</source>
          <target state="translated">Überwachen Sie das zu erwartende Ergebnis dieses Methodenaufrufs mit "await", weisen Sie es einer Variablen zu, oder übergeben Sie es an eine andere Methode.</target>
        </trans-unit>
        <trans-unit id="VSTHRD110_Title" translate="yes" xml:space="preserve">
          <source>Observe result of async calls</source>
          <target state="translated">Ergebnis asynchroner Aufrufe überwachen</target>
        </trans-unit>
        <trans-unit id="VSTHRD011b_MessageFormat" translate="yes" xml:space="preserve">
          <source>Invoking or blocking on async code in a Lazy<it id="1" pos="open">&lt;T&gt;</it> value factory can deadlock.
Use AsyncLazy<it id="2" pos="open">&lt;T&gt;</it> instead.</source>
          <target state="translated">Das Aufrufen oder Blockieren von asynchronem Code in einer Lazy&lt;it id="1" pos="open"&gt;&lt;T&gt;&lt;/it&gt;-Wertfactory kann zu einem Deadlock führen.
Verwenden Sie stattdessen "AsyncLazy&lt;it id="2" pos="open"&gt;&lt;T&gt;&lt;/it&gt;".</target>
        </trans-unit>
        <trans-unit id="VSTHRD200_AddAsync_MessageFormat" translate="yes" xml:space="preserve">
          <source>Use "Async" suffix in names of methods that return an awaitable type.</source>
          <target state="translated">Verwenden Sie das Suffix "Async" in Namen von Methoden, die einen Typ zurückgeben, der "await" unterstützt.</target>
        </trans-unit>
        <trans-unit id="VSTHRD200_RemoveAsync_MessageFormat" translate="yes" xml:space="preserve">
          <source>Avoid "Async" suffix in names of methods that do not return an awaitable type.</source>
          <target state="translated">Vermeiden Sie das Suffix "Async" in Namen von Methoden, die keinen Typ zurückgeben, der "await" unterstützt.</target>
        </trans-unit>
        <trans-unit id="VSTHRD111_CodeFix_False_Title" translate="yes" xml:space="preserve">
          <source>Add .ConfigureAwait(false)</source>
          <target state="translated">.ConfigureAwait(false) hinzufügen</target>
          <note from="MultilingualBuild" annotates="source" priority="2">".ConfigureAwait(false)" should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD111_CodeFix_True_Title" translate="yes" xml:space="preserve">
          <source>Add .ConfigureAwait(true)</source>
          <target state="translated">.ConfigureAwait(true) hinzufügen</target>
          <note from="MultilingualBuild" annotates="source" priority="2">".ConfigureAwait(true)" should not be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD111_MessageFormat" translate="yes" xml:space="preserve">
          <source>Add .ConfigureAwait(bool) to your await expression.</source>
          <target state="translated">Fügen Sie ".ConfigureAwait(bool)" zu Ihrem await-Ausdruck hinzu.</target>
          <note from="MultilingualBuild" annotates="source" priority="2">".ConfigureAwait(bool)" and "await" should NOT be translated.</note>
        </trans-unit>
        <trans-unit id="VSTHRD111_Title" translate="yes" xml:space="preserve">
          <source>Use ConfigureAwait(bool)</source>
          <target state="translated">ConfigureAwait(bool) verwenden</target>
          <note from="MultilingualBuild" annotates="source" priority="2">"ConfigureAwait(bool)" is a reference and should NOT be translated.</note>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>