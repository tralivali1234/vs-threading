<?xml version="1.0" encoding="utf-8"?>
<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AwaitXInstead" xml:space="preserve">
    <value>Bunun yerine: Await {0}</value>
    <comment>"await" is a C# keyword and should not be translated.
{0} is a method name.</comment>
  </data>
  <data name="UseAwaitInstead" xml:space="preserve">
    <value>Bunun yerine await kullanın</value>
    <comment>"await" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD002_MessageFormat" xml:space="preserve">
    <value>Görevlerde veya bekleyen öğelerde zaman uyumlu olarak beklemek kilitlenmelere neden olabilir. Bunun yerine bekleyen veya JoinableTaskFactory.Run kullanın.</value>
    <comment>"await" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD002_Title" xml:space="preserve">
    <value>Sorunlu zaman uyumlu beklemelerden kaçının</value>
  </data>
  <data name="VSTHRD010_Title" xml:space="preserve">
    <value>Ana iş parçacığındaki tek iş parçacıklı türleri çağırın</value>
  </data>
  <data name="VSTHRD100_MessageFormat" xml:space="preserve">
    <value>"async void" metotları tarafından işlenmeyen tüm özel durumlar işlemi kilitleyeceğinden bunları kullanmayın.</value>
    <comment>"async void" is a pair of C# keywords. Do not translate them.</comment>
  </data>
  <data name="VSTHRD100_Title" xml:space="preserve">
    <value>Async void metotları kullanmayın</value>
    <comment>"async void" is a pair of C# keywords. Do not translate them.</comment>
  </data>
  <data name="VSTHRD101_MessageFormat" xml:space="preserve">
    <value>Temsilci tarafından işlenmeyen tüm özel durumlar işlemi kilitleyeceğinden, temsilci türü döndüren bir void için async lambda kullanmayın.</value>
    <comment>"void" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD101_Title" xml:space="preserve">
    <value>Desteklenmeyen async temsilcilerini kullanmayın</value>
  </data>
  <data name="VSTHRD106_MessageFormat" xml:space="preserve">
    <value>AsyncEventHandler temsilcileri, Microsoft.VisualStudio.Threading bütünleştirilmiş kodunda tanımlanan "TplExtensions.InvokeAsync()" genişletme metodu aracılığıyla çağrılmalıdır.</value>
  </data>
  <data name="VSTHRD106_Title" xml:space="preserve">
    <value>Async olayları tetiklemek için InvokeAsync kullanın</value>
  </data>
  <data name="VSTHRD003_MessageFormat" xml:space="preserve">
    <value>JoinableTaskFactory.Run içindeki bir Task için await çağırmak, görevin temsilci dışında başlatılması durumunda kilitlenmelere neden olabilir.
Görevin temsilcinin içinde başlatılmasını sağlayarak veya Task yerine JoinableTask kullanarak bu sorunu önleyebilirsiniz.</value>
  </data>
  <data name="VSTHRD003_Title" xml:space="preserve">
    <value>Birleşik olmayan görevleri birleşik ortamlarda beklemeyin</value>
  </data>
  <data name="VSTHRD011_MessageFormat" xml:space="preserve">
    <value>Lazy&lt;Task&lt;T&gt;&gt;.Value kilitlenebilir.
Bunun yerine AsyncLazy&lt;T&gt; kullanın.</value>
  </data>
  <data name="VSTHRD011_Title" xml:space="preserve">
    <value>AsyncLazy&lt;T&gt; kullanın</value>
  </data>
  <data name="VSTHRD103_MessageFormat" xml:space="preserve">
    <value>{0} zaman uyumlu olarak engeller. Bunun yerine {1} bekleyin.</value>
  </data>
  <data name="VSTHRD103_MessageFormat_UseAwaitInstead" xml:space="preserve">
    <value>{0} zaman uyumlu olarak engeller. Bunun yerine await kullanın.</value>
  </data>
  <data name="VSTHRD103_Title" xml:space="preserve">
    <value>Zaman uyumsuz metottayken zaman uyumsuz metotlar çağırın</value>
  </data>
  <data name="VSTHRD102_MessageFormat" xml:space="preserve">
    <value>Zaman uyumlu olmanız gereken genel giriş noktası üyelerinde, JoinableTaskFactory.Run veya Task.Result gibi zaman uyumlu olarak engelleyen metot çağrılarının kullanımını sınırlayın. Bunu iç üyeler için kullanmak, zaman uyumsuz çerçevelerin arasına gereksiz yere zaman uyumlu çerçeveler ekleyerek iş parçacığı havuzunun tükenmesine sebep olabilir.</value>
  </data>
  <data name="VSTHRD102_Title" xml:space="preserve">
    <value>İç mantığı zaman uyumsuz olarak uygulayın</value>
  </data>
  <data name="VSTHRD200_CodeFix_Title" xml:space="preserve">
    <value>{0} olarak yeniden adlandırın</value>
    <comment>{0} is a method name.</comment>
  </data>
  <data name="VSTHRD200_Title" xml:space="preserve">
    <value>Async metotları için "Async" sonekini kullanın</value>
  </data>
  <data name="VSTHRD100_CodeFix_Title" xml:space="preserve">
    <value>Döndürme türünü Task olarak değiştirin</value>
    <comment>Task is a type name and should not be translated.</comment>
  </data>
  <data name="VSTHRD105_MessageFormat" xml:space="preserve">
    <value>TaskScheduler.Current varsayan metot aşırı yüklemelerinden kaçının. TaskScheduler kabul eden bir aşırı yükleme kullanın ve TaskScheduler.Default (veya başka birini) açık olarak belirtin.</value>
  </data>
  <data name="VSTHRD105_Title" xml:space="preserve">
    <value>TaskScheduler.Current varsayan metot aşırı yüklemelerinden kaçının</value>
  </data>
  <data name="VSTHRD012_MessageFormat" xml:space="preserve">
    <value>Ana iş parçacığında kilitlenmeleri önlemek için bu çağrıda (veya başka bir aşırı yüklemede) bir JoinableTaskFactory örneği sağlayın.</value>
  </data>
  <data name="VSTHRD012_Title" xml:space="preserve">
    <value>İzin veriliyorsa JoinableTaskFactory sağlayın</value>
  </data>
  <data name="VSTHRD104_MessageFormat" xml:space="preserve">
    <value>Bu metodun zaman uyumlu olarak engellemeyen zaman uyumsuz bir sürümünü sunun. Sonra bir JoinableTaskFactory.Run temsilcisi içinde bu zaman uyumsuz metoda çağrı yapmak için bu metodu basitleştirin.</value>
  </data>
  <data name="VSTHRD104_Title" xml:space="preserve">
    <value>Zaman uyumsuz metotlar sunun</value>
  </data>
  <data name="VSTHRD001_MessageFormat" xml:space="preserve">
    <value>Kilitlenebilen ya da öncelik belirtilmesini gerektiren API’ler yerine JoinableTaskFactory.SwitchToMainThreadAsync() öğesinin UI iş parçacığına geçmesini bekleyin.</value>
  </data>
  <data name="VSTHRD001_Title" xml:space="preserve">
    <value>İş parçacıkları arasında geçiş yapan eski API’lerden kaçının</value>
    <comment>thread switching APIs refers to Visual Studio SDK or .NET methods that can be used to switch threads, but are obsolete and should be avoided.</comment>
  </data>
  <data name="VSTHRD107_MessageFormat" xml:space="preserve">
    <value>“using” ifadesi için await işleci eksik.</value>
    <comment>"await" and "using" are C# keywords and should not be translated.</comment>
  </data>
  <data name="VSTHRD107_Title" xml:space="preserve">
    <value>using ifadesi içinde await Task</value>
    <comment>"await Task" is a C# compound term, and "using" is a C# keyword. These should not be translated.</comment>
  </data>
  <data name="VSTHRD107_CodeFix_Title" xml:space="preserve">
    <value>Await using ifadesi</value>
    <comment>"await" and "using" are C# keywords and should not be translated.</comment>
  </data>
  <data name="VSTHRD002_CodeFix_Await_Title" xml:space="preserve">
    <value>Bunun yerine await kullanın</value>
    <comment>"await" is a C# keyword and should not be translated.</comment>
  </data>
  <data name="VSTHRD108_MessageFormat" xml:space="preserve">
    <value>İş parçacığı benzeşim denetimleri koşulsuz olmalıdır.</value>
  </data>
  <data name="VSTHRD108_Title" xml:space="preserve">
    <value>İş parçacığı benzeşimini koşulsuz olarak onayla</value>
  </data>
  <data name="VSTHRD109_MessageFormat" xml:space="preserve">
    <value>Ana iş parçacığında değilken, zaman uyumsuz veya Task döndüren metot içinden özel durum oluşturmaktan kaçının. Bunun yerine, gereken iş parçacığına geçin.</value>
  </data>
  <data name="VSTHRD109_Title" xml:space="preserve">
    <value>Zaman uyumsuz metotlarda assert yerine switch</value>
  </data>
  <data name="VSTHRD010_MessageFormat_Sync" xml:space="preserve">
    <value>"{0}" erişimi yalnızca ana iş parçacığı üzerinde gerçekleştirilmelidir. Önce {1}() çağırın.</value>
    <comment>{0} is a type or member name and {1} is the name of a method that throws if not called from the main thread.</comment>
  </data>
  <data name="VSTHRD010_MessageFormat_Async" xml:space="preserve">
    <value>"{0}" erişimi yalnızca ana iş parçacığı üzerinde gerçekleştirilmelidir. Önce JoinableTaskFactory.SwitchToMainThreadAsync() metodunu bekleyin.</value>
    <comment>{0} is a type or member name.</comment>
  </data>
  <data name="VSTHRD004_MessageFormat" xml:space="preserve">
    <value>JoinableTaskFactory.SwitchToMainThreadAsync() çağrıları beklenmelidir.</value>
  </data>
  <data name="VSTHRD004_Title" xml:space="preserve">
    <value>SwitchToMainThreadAsync bekleyin</value>
    <comment>Do not translate either of these. The first is a keyword, the second is a method name.</comment>
  </data>
  <data name="VSTHRD110_MessageFormat" xml:space="preserve">
    <value>Bu metot çağrısının beklenebilir sonucunu bekleyerek, bir değişkene atayarak veya bir başka metoda geçirerek gözlemleyin.</value>
  </data>
  <data name="VSTHRD110_Title" xml:space="preserve">
    <value>Zaman uyumsuz çağrıların sonucunu gözlemleyin</value>
  </data>
  <data name="VSTHRD011b_MessageFormat" xml:space="preserve">
    <value>Bir Lazy&lt;T&gt; değer fabrikasında zaman uyumsuz kod çağrısı veya engellemesi çıkmaza yol açabilir.
Bunun yerine AsyncLazy&lt;T&gt; kullanın.</value>
  </data>
  <data name="VSTHRD200_AddAsync_MessageFormat" xml:space="preserve">
    <value>Beklenebilir bir tür döndüren metotların adlarında “Async” ekini kullanın.</value>
  </data>
  <data name="VSTHRD200_RemoveAsync_MessageFormat" xml:space="preserve">
    <value>Beklenebilir bir tür döndürmeyen metotların adlarında “Async” ekini kullanmaktan kaçının.</value>
  </data>
  <data name="VSTHRD111_CodeFix_False_Title" xml:space="preserve">
    <value>.ConfigureAwait(false) ekleyin</value>
    <comment>".ConfigureAwait(false)" should not be translated.</comment>
  </data>
  <data name="VSTHRD111_CodeFix_True_Title" xml:space="preserve">
    <value>.ConfigureAwait(true) ekleyin</value>
    <comment>".ConfigureAwait(true)" should not be translated.</comment>
  </data>
  <data name="VSTHRD111_MessageFormat" xml:space="preserve">
    <value>await ifadenize .ConfigureAwait(bool) ekleyin.</value>
    <comment>".ConfigureAwait(bool)" and "await" should NOT be translated.</comment>
  </data>
  <data name="VSTHRD111_Title" xml:space="preserve">
    <value>ConfigureAwait(bool) kullanın</value>
    <comment>"ConfigureAwait(bool)" is a reference and should NOT be translated.</comment>
  </data>
</root>